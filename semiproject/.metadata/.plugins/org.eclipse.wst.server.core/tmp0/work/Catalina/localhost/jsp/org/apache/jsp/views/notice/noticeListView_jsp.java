/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.65
 * Generated at: 2021-05-07 11:21:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.notice;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import com.kh.notice.model.vo.Notice;
import com.kh.member.model.vo.Member;

public final class noticeListView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/views/notice/../common/menubar.jsp", Long.valueOf(1620377830922L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.kh.notice.model.vo.Notice");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("com.kh.member.model.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write(' ');

 	ArrayList<Notice> list = (ArrayList<Notice>)request.getAttribute("list");
 
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write(" <style>\r\n");
      out.write("\t.outer{\r\n");
      out.write("\tbackground:black;\r\n");
      out.write("\tcolor:white;\r\n");
      out.write("\twidth:1000px;\r\n");
      out.write("\theight:500px;\r\n");
      out.write("\tmargin:auto;\r\n");
      out.write("\t}\r\n");
      out.write("\t.list-area>tbody>tr:hover{\r\n");
      out.write("\t\tborder:1px solid white;\r\n");
      out.write("\t\ttext-align:center;\r\n");
      out.write("\t}\r\n");
      out.write("\t</style>\r\n");
      out.write(" \r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');

	//System.out.println(request.getContextPath());
	String contextPath = request.getContextPath(); // "/jsp"
	
	Member loginUser = (Member)session.getAttribute("loginUser");
	// 로그인 전 menubar.jsp 로딩시 : null
	// 로그인 성공 후 menubar.jsp 로딩시 : 로그인 성공한 회원의 정보가 담겨있는 Member객체
	
	String alertMsg = (String)session.getAttribute("alertMsg");
	// 서비스요청전 menubar.jsp 로딩시 : null
	// 서비스요청성공후 menubar.jsp 로딩시 : alert로 띄워줄 메세지 문구


      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("\r\n");
      out.write("<!-- Latest compiled and minified CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\r\n");
      out.write("<!-- jQuery library -->\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("<!-- Popper JS -->\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>\r\n");
      out.write("<!-- Latest compiled JavaScript -->\r\n");
      out.write("<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("    #login-form, #user-info {float:right}\r\n");
      out.write("    #user-info a{\r\n");
      out.write("        text-decoration:none;\r\n");
      out.write("        color:black;\r\n");
      out.write("        font-size:12px;\r\n");
      out.write("    }\r\n");
      out.write("    .nav-area{background:black;}\r\n");
      out.write("    .menu{\r\n");
      out.write("        display:table-cell;\r\n");
      out.write("        height:50px;\r\n");
      out.write("        width:150px;\r\n");
      out.write("    }\r\n");
      out.write("    .menu a{\r\n");
      out.write("        text-decoration:none;\r\n");
      out.write("        color:white;\r\n");
      out.write("        font-size:20px;\r\n");
      out.write("        font-weight:bold;\r\n");
      out.write("        display:block;\r\n");
      out.write("        width:100%;\r\n");
      out.write("        height:100%;\r\n");
      out.write("        line-height:50px;\r\n");
      out.write("    }\r\n");
      out.write("    .menu a:hover{\r\n");
      out.write("        background:darkgray;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tvar msg = \"");
      out.print( alertMsg );
      out.write("\"; \r\n");
      out.write("\t\t// var msg = \"메세지\" / \"null\"\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(msg != \"null\"){\r\n");
      out.write("\t\t\talert(msg);\r\n");
      out.write("\t\t\t// 알람창 띄워준 후 session에 담긴 해당 메세지는 지워줘야됨\r\n");
      out.write("\t\t\t// 안그러면 menubar.jsp가 로딩될때마다 매번 alert가 계속 뜰꺼임\r\n");
      out.write("\t\t\t");
 session.removeAttribute("alertMsg"); 
      out.write("\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("    <h1 align=\"center\">Welcome Boram World</h1>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"login-area\">\r\n");
      out.write("\t\r\n");
      out.write("\t\t");
 if(loginUser == null) { 
      out.write("\r\n");
      out.write("\t        <!--로그인전에 보여지는 로그인form-->\r\n");
      out.write("\t        <form id=\"login-form\" action=\"");
      out.print( contextPath );
      out.write("/login.me\" method=\"post\">\r\n");
      out.write("\t            <table>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                    <th>아이디 : </th>\r\n");
      out.write("\t                    <td><input type=\"text\" name=\"userId\" required></td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                    <th>비밀번호 : </th>\r\n");
      out.write("\t                    <td><input type=\"password\" name=\"userPwd\" required></td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                    <th colspan=\"2\">\r\n");
      out.write("\t                        <button type=\"submit\">로그인</button>\r\n");
      out.write("\t                        <button type=\"button\" onclick=\"enrollPage();\">회원가입</button>\r\n");
      out.write("\t                    </th>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t            </table>\r\n");
      out.write("\t        </form>\r\n");
      out.write("\t        <script>\r\n");
      out.write("\t        \tfunction enrollPage(){\r\n");
      out.write("\t        \t\t//location.href = \"");
      out.print(contextPath);
      out.write("/views/member/memberEnrollForm.jsp\";\r\n");
      out.write("\t        \t\t// 웹 애플리케이션의 디렉토리 구조가 url에 노출되면 보안에 위험\r\n");
      out.write("\t        \t\r\n");
      out.write("\t        \t\t// 단순한 정적인 페이지 요청이라고 해도 반드시 servlet거쳐갈것! => url에 서블릿 매핑값만 노출됨\r\n");
      out.write("\t        \t\tlocation.href = \"");
      out.print(contextPath);
      out.write("/enrollForm.me\";\r\n");
      out.write("\t        \t\r\n");
      out.write("\t        \t}\r\n");
      out.write("\t        </script>\r\n");
      out.write("\t\t");
 }else{ 
      out.write("\r\n");
      out.write("\t        <!--로그인성공후-->\r\n");
      out.write("\t        <div id=\"user-info\">\r\n");
      out.write("\t            <b>");
      out.print( loginUser.getUserName() );
      out.write("님</b>의 방문을 환영합니다. <br><br>\r\n");
      out.write("\t            <div align=\"center\">\r\n");
      out.write("\t                <a href=\"");
      out.print(contextPath);
      out.write("/myPage.me\">마이페이지</a>\r\n");
      out.write("\t                <a href=\"");
      out.print(contextPath);
      out.write("/logout.me\">로그아웃</a>\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t        </div>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <br clear=\"both\">\r\n");
      out.write("    <br>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"nav-area\" align=\"center\">\r\n");
      out.write("        <div class=\"menu\"><a href=\"");
      out.print(contextPath);
      out.write("\">HOME</a></div>\r\n");
      out.write("        <div class=\"menu\"><a href=\"");
      out.print(contextPath);
      out.write("/list.no\">공지사항</a></div>\r\n");
      out.write("        <div class=\"menu\"><a href=\"\">일반게시판</a></div>\r\n");
      out.write("        <div class=\"menu\"><a href=\"\">사진게시판</a></div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<div class =\"outer\">\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<h2 align=\"center\">공지사항</h2>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div align=\"right\">\r\n");
      out.write("\t\t\t<button>글작성</button>\r\n");
      out.write("\t\t\t<br><br>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<table class=\"list-area\" align=\"center\">\r\n");
      out.write("\t\t\t<thead>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>글번호</th>\r\n");
      out.write("\t\t\t\t<th width=\"400\">글제목</th>\r\n");
      out.write("\t\t\t\t<th width=\"100\">작성자</th>\r\n");
      out.write("\t\t\t\t<th>조회수</th>\r\n");
      out.write("\t\t\t\t<th width=\"100\">작성일 </th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</thead>\r\n");
      out.write("\t\t\t<tbody>\t\t\t\r\n");
      out.write("\t\t\t");
 if(list.isEmpty()) {
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"5\">존재하는 공지사항이 없습니다.\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t");
}else{ 
      out.write("\r\n");
      out.write("\t\t\t");
 for(Notice n : list) {
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(n.getNoticeNo());
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(n.getNoticeTitle());
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(n.getNoticeWriter());
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(n.getCount());
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(n.getCreateDate());
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t</tbody>\r\n");
      out.write("\t\t\t<tfoot>\r\n");
      out.write("\t\t\t</tfoot>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
